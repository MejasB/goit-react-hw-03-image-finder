{"version":3,"sources":["components/loader/Loader.js","api.js","components/button/ButtonStyled.js","components/button/Button.js","components/imageGalleryItem/ImageGalleryItemStyled.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGalleryStyled.js","components/imageGallery/ImageGallery.js","components/modal/ModalStyled.js","components/modal/Modal.js","components/searchbar/SearchbarStyled.js","components/searchbar/Searchbar.js","App.js","index.js"],"names":["MyLoader","type","color","height","width","timeout","style","zIndex","position","top","left","apiUrl","getImages","searchTerm","page","a","axios","get","response","result","data","hits","map","hit","id","webformatURL","largeImageURL","getImagesWithDelay","delay","then","sleeper","ms","x","Promise","resolve","setTimeout","ButtonContainer","styled","button","Button","onClick","ImageGalleryItemContainer","li","ImageGalleryItem","imgURL","src","alt","className","ImageGalleryContainer","ul","ImageGallery","onItemClick","images","event","target","dataset","largeImageUrl","image","Overlay","div","Modal","onKeyDown","key","props","closeModal","window","addEventListener","this","removeEventListener","Component","SearchbarHeader","header","SearchForm","form","Searchbar","state","onInputChange","setState","value","onSubmit","preventDefault","autoComplete","autoFocus","placeholder","onChange","apiDelay","App","pageNum","modalLargeURL","showLoader","componentDidUpdate","scrollTo","document","documentElement","scrollHeight","behavior","onSearchSubmit","prevState","hideLoader","onBtnClick","newImages","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1c594ca.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nexport const MyLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"TailSpin\"\r\n      color=\"#00BFFF\"\r\n      height={80}\r\n      width={80}\r\n      timeout={3000}\r\n      style={{ zIndex: \"100\", position: \"fixed\", top: \"50%\", left: \"50%\" }}\r\n    />\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst numPerPage = 12;\r\nconst apiKey = \"22399279-48a424365ce07e64d37e0f0c3\";\r\nconst apiUrl = `https://pixabay.com/api/?key=${apiKey}&\r\n  image_type=photo&orientation=horizontal&per_page=${numPerPage}`;\r\n\r\nexport const getImages = async (searchTerm, page) => {\r\n  try {\r\n    const response = await axios.get(apiUrl + `&q=${searchTerm}&page=${page}`);\r\n\r\n    const result = response.data.hits.map((hit) => ({\r\n      id: hit.id,\r\n      webformatURL: hit.webformatURL,\r\n      largeImageURL: hit.largeImageURL,\r\n    }));\r\n    return result;\r\n  } catch (error) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getImagesWithDelay = async (searchTerm, page, delay) => {\r\n  return getImages(searchTerm, page).then(sleeper(delay));\r\n};\r\n\r\nconst sleeper = (ms) => {\r\n  return function (x) {\r\n    return new Promise((resolve) => setTimeout(() => resolve(x), ms));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonContainer = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #303f9f;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import { ButtonContainer } from \"./ButtonStyled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <ButtonContainer type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ImageGalleryItemContainer = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n  .ImageGalleryItem-image {\r\n    width: 100%;\r\n    height: 260px;\r\n    object-fit: cover;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  .ImageGalleryItem-image:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import { ImageGalleryItemContainer } from \"./ImageGalleryItemStyled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ id, imgURL, largeImageURL }) => {\r\n  return (\r\n    <ImageGalleryItemContainer>\r\n      <img\r\n        src={imgURL}\r\n        data-large-image-url={largeImageURL}\r\n        key={id}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </ImageGalleryItemContainer>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  imgURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ImageGalleryContainer = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\nimport { ImageGalleryContainer } from \"./ImageGalleryStyled\";\r\n\r\nconst ImageGallery = ({ onItemClick, images }) => {\r\n  return (\r\n    <ImageGalleryContainer\r\n      onClick={(event) => onItemClick(event.target.dataset.largeImageUrl)}\r\n    >\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          id={image.id}\r\n          imgURL={image.webformatURL}\r\n          largeImageURL={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ImageGalleryContainer>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  onItemClick: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n\r\n  .Modal {\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Overlay } from \"./ModalStyled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  onKeyDown = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Overlay onClick={this.props.closeModal}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchbarHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n\r\n  .SearchForm-button {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n  }\r\n\r\n  .SearchForm-button:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  .SearchForm-button-label {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n\r\n  .SearchForm-input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n\r\n  .SearchForm-input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { SearchbarHeader, SearchForm } from \"./SearchbarStyled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchTerm: \"\",\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.searchTerm);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SearchbarHeader>\r\n        <SearchForm onSubmit={this.onSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.onInputChange}\r\n          />\r\n        </SearchForm>\r\n      </SearchbarHeader>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\nimport { MyLoader } from \"./components/loader/Loader\";\nimport { getImagesWithDelay } from \"./api\";\nimport Button from \"./components/button/Button\";\nimport ImageGallery from \"./components/imageGallery/ImageGallery\";\nimport Modal from \"./components/modal/Modal\";\nimport Searchbar from \"./components/searchbar/Searchbar\";\n\nconst apiDelay = 100;\n\nclass App extends Component {\n  state = {\n    pageNum: 1,\n    searchTerm: \"\",\n    images: [],\n    modalLargeURL: \"\",\n    showLoader: false,\n  };\n\n  componentDidUpdate = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  onSearchSubmit = (searchTerm) => {\n    this.showLoader();\n\n    getImagesWithDelay(searchTerm, 1, apiDelay).then((images) =>\n      this.setState(\n        (prevState) => ({\n          images: images,\n          pageNum: 1,\n          searchTerm: searchTerm,\n        }),\n        this.hideLoader\n      )\n    );\n  };\n\n  onBtnClick = () => {\n    this.showLoader();\n    getImagesWithDelay(\n      this.state.searchTerm,\n      this.state.pageNum + 1,\n      apiDelay\n    ).then((newImages) =>\n      this.setState(\n        (prevState) => ({\n          images: [...prevState.images, ...newImages],\n          pageNum: prevState.pageNum + 1,\n        }),\n        this.hideLoader\n      )\n    );\n  };\n\n  onItemClick = (largeImageUrl) => {\n    this.setState({ modalLargeURL: largeImageUrl });\n  };\n\n  closeModal = () => {\n    this.setState({ modalLargeURL: \"\" });\n  };\n\n  showLoader = () => {\n    this.setState((prevState) =>\n      prevState.showLoader ? null : { showLoader: true }\n    );\n  };\n\n  hideLoader = () => {\n    this.setState((prevState) =>\n      prevState.showLoader ? { showLoader: false } : null\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.onSearchSubmit}></Searchbar>\n        {this.state.images.length > 0 && (\n          <ImageGallery\n            images={this.state.images}\n            onItemClick={this.onItemClick}\n          ></ImageGallery>\n        )}\n        {this.state.images.length > 0 && (\n          <Button onClick={this.onBtnClick}></Button>\n        )}\n        {this.state.modalLargeURL && (\n          <Modal\n            largeImageURL={this.state.modalLargeURL}\n            closeModal={this.closeModal}\n          ></Modal>\n        )}\n        {this.state.showLoader && <MyLoader></MyLoader>}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}